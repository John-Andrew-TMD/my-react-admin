//~ Some Mixins
@mixin fontFlex($size:12) {
  font-size: $size + px;
  [data-dpr="2"] &{
    font-size: $size*2 + px;
  }
  [data-dpr="3"] &{
    font-size: $size*3 + px;
  }
}
@mixin wh($w,$h){
  width: $w  + px;
  height: $h + px;
}
@mixin fc($f,$c){
  font-size: $f  + px;
  color    : $c;
}
@mixin dispFlexa {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  flex-wrap:wrap
}

@mixin dispFlex {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  align-items:center;
  flex-wrap:wrap
}

@mixin boxFlex {
  -webkit-box-flex: 1;
  -moz-box-flex: 1;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}
@mixin boxOrient($orient) {
  -moz-box-orient: $orient;
  -ms-box-orient: $orient;
  -webkit-box-orient: $orient;
  box-orient: $orient;
}
@mixin boxSizing {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  -o-box-sizing: border-box;
  -ms-box-sizing: border-box;
  box-sizing: border-box;
}
@mixin noBsizeBg($file) {
  background-image: url(vurl($file));
  background-repeat: no-repeat;
}

@mixin spriteIcon($url, $size) {
  background: url(sprintUrl($url));
  background-size: $size;
  background-repeat: no-repeat;
}

@mixin imgBg($url, $size: cover) {
  background-image: url(imgBgUrl($url));
  background-repeat: no-repeat;
  background-size: $size;
}

@mixin iconBg($url, $size: contain) {
  background-image: url(iconBgUrl($url));
  background-repeat: no-repeat;
  background-size: $size;
}

@mixin formTranslate($translate:(-50%,-50%)){
  -webkit-transform: $translate;
  -moz-transform: $translate;
  -ms-transform: $translate;
  -o-transform: $translate;
  transform: $translate;
}
@mixin borderRadius($radius:5px) {
  border-radius: $radius;
  border-top-left-radius: $radius;
  border-top-right-radius: $radius;
  border-bottom-left-radius: $radius;
  border-bottom-right-radius: $radius;
}
@mixin lineNum($num) {
  overflow: hidden;
  text-overflow:ellipsis;
  -webkit-line-clamp:$num;
  display:-webkit-box;
  -webkit-box-orient:vertical;
}
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}
@mixin triangleLeft($left, $top, $color, $borderWidth) {
  content: "";
  width: 0;
  height: 0;
  border: $borderWidth solid transparent;
  border-right: 10px solid $color;
  position: absolute;
  left: $left;
  top: $top;
}
@mixin triangleTop($left, $top, $color, $borderWidth) {
  content: "";
  width: 0;
  height: 0;
  border: $borderWidth solid transparent;
  border-bottom: 10px solid $color;
  position: absolute;
  left: $left;
  top: $top;
}
@mixin vantbd1px($pos: (top,right,bottom,left),$color: #dddddd,$type:solid) {
  position: relative;
  &::after{
    position: absolute;
    box-sizing: border-box;
    content: ' ';
    pointer-events: none;
    top: -50%;
    right: -50%;
    bottom: -50%;
    left: -50%;
    border: 0 solid $color;
    transform: scale(0.5);
    @each $item in $pos {
      border-#{$item}-width: 1Px;
    }
  }
}
$browserPrefix:('-webkit-','-moz-','-ms-','-o-','');
@mixin transition($obj){
    @each $i in $browserPrefix{
        #{$i}transition:$obj;
    }
}
@mixin transform($obj){
    @each $i in $browserPrefix{
        #{$i}transform:$obj;
    }
}
@mixin animation($obj){
    @each $i in $browserPrefix{
        #{$i}animation:$obj;
    }
}
@mixin keyframes($name,$obj){
    @-webkit-keyframes #{$name}{
        @each $i,$val in $obj{
            #{$i}{
                @each $j,$val2 in $val{
                    #{$j}:$val2;
                }
            }
        }
    }
    @-moz-keyframes #{$name}{
        @each $i,$val in $obj{
            #{$i}{
                @each $j,$val2 in $val{
                    #{$j}:$val2;
                }
            }
        }
    }
    @-ms-keyframes #{$name}{
        @each $i,$val in $obj{
            #{$i}{
                @each $j,$val2 in $val{
                    #{$j}:$val2;
                }
            }
        }
    }
    @-o-keyframes #{$name}{
        @each $i,$val in $obj{
            #{$i}{
                @each $j,$val2 in $val{
                    #{$j}:$val2;
                }
            }
        }
    }
    @keyframes #{$name}{
        @each $i,$val in $obj{
            #{$i}{
                @each $j,$v in $val{
                    #{$j}:$v;
                }
            }
        }
    }
}